{"version":3,"sources":["webpack:///./src/pages/blog/index.js","webpack:///./src/components/BlogRoll.js"],"names":["BlogIndexPage","render","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_2__","className","style","backgroundImage","boxShadow","backgroundColor","color","padding","_components_BlogRoll__WEBPACK_IMPORTED_MODULE_3__","React","Component","BlogRoll","posts","this","props","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_2___default","map","_ref","post","node","key","id","frontmatter","featuredpost","featuredimage","_PreviewCompatibleImage__WEBPACK_IMPORTED_MODULE_5__","imageInfo","image","alt","title","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","fields","slug","date","excerpt","propTypes","PropTypes","shape","array","__webpack_exports__","query","count","_public_static_d_3722544792_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"6LAKqBA,4FACnBC,OAAA,WACE,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,OACEE,UAAU,0CACVC,MAAO,CACLC,gBAAe,+BAGjBN,EAAAC,EAAAC,cAAA,MACEE,UAAU,iCACVC,MAAO,CACLE,UAAW,oCACXC,gBAAiB,OACjBC,MAAO,QACPC,QAAS,SANb,mBAYFV,EAAAC,EAAAC,cAAA,WAASE,UAAU,WACjBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAACS,EAAA,EAAD,cAzB6BC,IAAMC,4HCA3CC,4FACJf,OAAA,WAAS,IAEQgB,EADEC,KAAKC,MAAdC,KACsBC,kBAAtBC,MAER,OACEC,EAAApB,EAAAC,cAAA,OAAKE,UAAU,wBACZW,GACCA,EAAMO,IAAI,SAAAC,GAAA,IAASC,EAATD,EAAGE,KAAH,OACRJ,EAAApB,EAAAC,cAAA,OAAKE,UAAU,wBAAwBsB,IAAKF,EAAKG,IAC/CN,EAAApB,EAAAC,cAAA,WACEE,UAAS,kDACPoB,EAAKI,YAAYC,aAAe,cAAgB,KAGlDR,EAAApB,EAAAC,cAAA,cACGsB,EAAKI,YAAYE,cAChBT,EAAApB,EAAAC,cAAA,OAAKE,UAAU,sBACbiB,EAAApB,EAAAC,cAAC6B,EAAA,EAAD,CACEC,UAAW,CACTC,MAAOT,EAAKI,YAAYE,cACxBI,IAAG,qCACDV,EAAKW,UAKX,KACJd,EAAApB,EAAAC,cAAA,KAAGE,UAAU,aACXiB,EAAApB,EAAAC,cAACkC,EAAA,EAAD,CACEhC,UAAU,mCACViC,GAAIb,EAAKc,OAAOC,MAEff,EAAKI,YAAYO,OAEpBd,EAAApB,EAAAC,cAAA,mBACAmB,EAAApB,EAAAC,cAAA,QAAME,UAAU,+BACboB,EAAKI,YAAYY,QAIxBnB,EAAApB,EAAAC,cAAA,SACGsB,EAAKiB,QACNpB,EAAApB,EAAAC,cAAA,WACAmB,EAAApB,EAAAC,cAAA,WACAmB,EAAApB,EAAAC,cAACkC,EAAA,EAAD,CAAMhC,UAAU,SAASiC,GAAIb,EAAKc,OAAOC,MAAzC,4BA7CK3B,IAAMC,WAyD7BC,EAAS4B,UAAY,CACnBxB,KAAMyB,IAAUC,MAAM,CACpBzB,kBAAmBwB,IAAUC,MAAM,CACjCxB,MAAOuB,IAAUE,WAKRC,EAAA,oBACbzB,EAAApB,EAAAC,cAACkC,EAAA,EAAD,CACEW,MAAK,aA+BLhD,OAAQ,SAACmB,EAAM8B,GAAP,OAAiB3B,EAAApB,EAAAC,cAACY,EAAD,CAAUI,KAAMA,EAAM8B,MAAOA,KAhCxD9B,KAAA+B","file":"component---src-pages-blog-index-js-3bd07f424de7dcbb4c91.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../../components/Layout'\nimport BlogRoll from '../../components/BlogRoll'\n\nexport default class BlogIndexPage extends React.Component {\n  render() {\n    return (\n      <Layout>\n        <div\n          className=\"full-width-image-container margin-top-0\"\n          style={{\n            backgroundImage: `url('/img/blog-index.jpg')`,\n          }}\n        >\n          <h1\n            className=\"has-text-weight-bold is-size-1\"\n            style={{\n              boxShadow: '0.5rem 0 0 #f40, -0.5rem 0 0 #f40',\n              backgroundColor: '#f40',\n              color: 'white',\n              padding: '1rem',\n            }}\n          >\n            Latest Stories\n          </h1>\n        </div>\n        <section className=\"section\">\n          <div className=\"container\">\n            <div className=\"content\">\n              <BlogRoll />\n            </div>\n          </div>\n        </section>\n      </Layout>\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql, StaticQuery } from 'gatsby'\nimport PreviewCompatibleImage from './PreviewCompatibleImage'\n\nclass BlogRoll extends React.Component {\n  render() {\n    const { data } = this.props\n    const { edges: posts } = data.allMarkdownRemark\n\n    return (\n      <div className=\"columns is-multiline\">\n        {posts &&\n          posts.map(({ node: post }) => (\n            <div className=\"is-parent column is-6\" key={post.id}>\n              <article\n                className={`blog-list-item tile is-child box notification ${\n                  post.frontmatter.featuredpost ? 'is-featured' : ''\n                }`}\n              >\n                <header>\n                  {post.frontmatter.featuredimage ? (\n                    <div className=\"featured-thumbnail\">\n                      <PreviewCompatibleImage\n                        imageInfo={{\n                          image: post.frontmatter.featuredimage,\n                          alt: `featured image thumbnail for post ${\n                            post.title\n                          }`,\n                        }}\n                      />\n                    </div>\n                  ) : null}\n                  <p className=\"post-meta\">\n                    <Link\n                      className=\"title has-text-primary is-size-4\"\n                      to={post.fields.slug}\n                    >\n                      {post.frontmatter.title}\n                    </Link>\n                    <span> &bull; </span>\n                    <span className=\"subtitle is-size-5 is-block\">\n                      {post.frontmatter.date}\n                    </span>\n                  </p>\n                </header>\n                <p>\n                  {post.excerpt}\n                  <br />\n                  <br />\n                  <Link className=\"button\" to={post.fields.slug}>\n                    Keep Reading â†’\n                  </Link>\n                </p>\n              </article>\n            </div>\n          ))}\n      </div>\n    )\n  }\n}\n\nBlogRoll.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array,\n    }),\n  }),\n}\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query BlogRollQuery {\n        allMarkdownRemark(\n          sort: { order: DESC, fields: [frontmatter___date] }\n          filter: { frontmatter: { templateKey: { eq: \"blog-post\" } } }\n        ) {\n          edges {\n            node {\n              excerpt(pruneLength: 400)\n              id\n              fields {\n                slug\n              }\n              frontmatter {\n                title\n                templateKey\n                date(formatString: \"MMMM DD, YYYY\")\n                featuredpost\n                featuredimage {\n                  childImageSharp {\n                    fluid(maxWidth: 120, quality: 100) {\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data, count) => <BlogRoll data={data} count={count} />}\n  />\n)\n"],"sourceRoot":""}